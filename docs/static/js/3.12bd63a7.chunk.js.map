{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.js","components/UI/UI.styled.js","components/Form/Form.styled.js","components/Form/Form.js","components/Form/Elements.styled.js","components/Form/FormSubmit.js","components/Form/InputField.js","pages/Activation/ActivationForm.js","services/PasswordService.js","pages/Activation/ActivationHandler.js","utils/useUserInfo.js"],"names":["Section","styled","section","SectionTitle","h2","visuallyHidden","visuallyHiddenMixin","SectionComponent","children","React","memo","div","PageTitle","h1","Form","form","styledTheme","colors","bg","shadowBlack","lightGray","FormComponent","onSubmit","FormSubmit","button","white","accent","accentInteraction","FormField","label","FormLabel","FormFieldError","p","red","FormSubmitComponent","name","type","InputFieldComponent","errors","ActivationComponent","username","signup","useAuth","setErrors","useState","isActivated","setActivated","addMessage","useMessage","handleSubmit","useCallback","e","preventDefault","password","passwordEl","confirmEl","target","elements","validationErrors","confirmation","this","checkComplexity","length","validate","value","Container","to","ActivationHandler","useParams","isUserExist","user","setUser","useEffect","console","log","LoginDataService","then","res","useUserInfo","pathname","ActivationForm"],"mappings":"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","file":"static/js/3.12bd63a7.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { visuallyHiddenMixin } from '../../utils/style-mixins';\n\nexport const Section = styled.section`\n    padding-top: 24px;\n    padding-bottom: 24px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 36px;\n  margin-bottom: 24px;\n  ${({visuallyHidden}) => visuallyHidden && visuallyHiddenMixin()}\n`;\n","// @ts-check\nimport React from 'react';\n// Styles\nimport { Section } from './Section.styled';\n\nfunction SectionComponent({ children }) {\n  return <Section>{children}</Section>;\n}\n\nexport default React.memo(SectionComponent);\n","import styled from 'styled-components';\nimport { visuallyHiddenMixin } from '../../utils/style-mixins';\n\nexport const UI = styled.div`\n\n`;\n\nexport const PageTitle = styled.h1`\n  ${({visuallyHidden}) => visuallyHidden && visuallyHiddenMixin()}\n`\n","import styled from 'styled-components';\nimport {styledTheme} from '../../constants/styled-theme';\n\nexport const Form = styled.form`\n  background-color: ${styledTheme.colors.bg};\n  padding: 24px;\n  box-shadow: 0 3px 5px 0 ${styledTheme.colors.shadowBlack};\n  border: 2px solid ${styledTheme.colors.lightGray};\n  border-radius: 5px;\n`;\n\n","import React from 'react';\nimport { Form } from './Form.styled';\n\nfunction FormComponent({children, onSubmit}) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {children}\n    </Form>\n  );\n}\n\nexport default React.memo(FormComponent);\n","import styled from 'styled-components';\nimport { styledTheme } from '../../constants/styled-theme';\n\nexport const FormSubmit = styled.button`\n  border: none;\n  border-radius: 3px;\n  padding: 4px 16px;\n  cursor: pointer;\n  margin-top: 12px;\n  color: ${styledTheme.colors.white};\n  background-color: ${styledTheme.colors.accent};\n  transition: 100ms ease-out background-color;\n  \n  &:hover,\n  &:focus {\n    background-color: ${styledTheme.colors.accentInteraction};\n  }\n`;\n\nexport const FormField = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const FormLabel = styled.div`\n  font-size: 12px;\n  max-width: 200px;\n  margin-bottom: 4px;\n`;\n\nexport const FormFieldError = styled.p`\n  position: absolute;\n  color: ${styledTheme.colors.red};\n  font-size: 8px;\n`;\n\n","import React from 'react';\nimport { FormSubmit } from './Elements.styled';\n\nfunction FormSubmitComponent({ children }) {\n  return (\n    <FormSubmit name=\"submit\" type='submit'>{children}</FormSubmit>\n  );\n}\n\nexport default React.memo(FormSubmitComponent);\n","import React from 'react';\nimport { FormField, FormFieldError, FormLabel } from './Elements.styled';\n\nfunction InputFieldComponent({type, label, name, errors}) {\n  return (\n    <FormField>\n      <FormLabel>{label}</FormLabel>\n      <input name={name} type={type} />\n      <FormFieldError>{errors}</FormFieldError>\n    </FormField>\n  )\n}\n\nexport default React.memo(InputFieldComponent);\n","import { useCallback, useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport { Form, FormSubmit, InputField } from \"../../components/Form\";\nimport { Container } from \"../../components/Container\";\nimport { Section, SectionTitle } from \"../../components/Section\";\nimport { PageTitle } from \"../../components/UI\";\n\nimport { useAuth } from \"../../utils/useAuth\";\nimport { useMessage } from \"../../utils/useMessage\";\n\nimport PasswordService from \"../../services/PasswordService\";\n\nfunction ActivationComponent({ username }) {\n  const { signup } = useAuth();\n  const [errors, setErrors] = useState(null);\n  const [isActivated, setActivated] = useState(false);\n\n  const { addMessage } = useMessage();\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      const {\n        password: passwordEl,\n        [\"password-confirm\"]: confirmEl,\n      } = e.target.elements;\n\n      const validationErrors = PasswordService.validate(\n        passwordEl.value,\n        confirmEl.value\n      );\n\n      if (validationErrors.length) {\n        setErrors(validationErrors);\n      } else {\n        setErrors(null);\n\n        signup(username, passwordEl.value);\n        addMessage(`User ${username} signed up successfully!`);\n        setActivated(true);\n      }\n    },\n    [setErrors, signup, username, addMessage]\n  );\n\n  return (\n    <>\n      <PageTitle visuallyHidden>Activation page</PageTitle>\n\n      <Section>\n        <Container>\n          <SectionTitle>\n            Please set password for your account, {username}\n          </SectionTitle>\n\n          <Form onSubmit={handleSubmit}>\n            <InputField\n              errors={errors}\n              name=\"password\"\n              label=\"Create your password\"\n              type=\"password\"\n            />\n            <InputField\n              name=\"password-confirm\"\n              label=\"Confirm your password\"\n              type=\"password\"\n            />\n            <FormSubmit>Submit</FormSubmit>\n          </Form>\n        </Container>\n      </Section>\n\n      {isActivated && <Redirect to=\"/login\" />}\n    </>\n  );\n}\n\nexport default ActivationComponent;\n","export default class PasswordService {\n  static validate(password, confirmation = '') {\n    if (confirmation && password !== confirmation) {\n      return [\"Passwords don't match\"];\n    }\n\n    return this.checkComplexity(password);\n  }\n\n  static checkComplexity(password) {\n    if (password.length > 3) {\n      return [];\n    }\n\n    return [\"Password is too easy to hack!\"];\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useUserInfo } from \"../../utils/useUserInfo\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport ActivationForm from \"./ActivationForm\";\nimport { useMessage } from '../../utils/useMessage';\n\nfunction ActivationHandler() {\n  const { username } = useParams();\n  const { isUserExist } = useUserInfo(username);\n  const { addMessage } = useMessage();\n\n  console.log('isUserExist', isUserExist);\n\n  useEffect(() => {\n    if (isUserExist) {\n      addMessage('User already exist!');\n    }\n  }, [isUserExist, addMessage])\n\n  return !isUserExist ? (\n    <ActivationForm username={username} />\n  ) : (\n    <Redirect\n      to={{\n        pathname: \"/login\",\n      }}\n    />\n  );\n}\n\nexport default React.memo(ActivationHandler);\n","import { useEffect, useState } from \"react\";\nimport LoginDataService from \"../services/LoginDataService\";\n\nexport const useUserInfo = (username) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    console.log(username);\n    LoginDataService.isUserExist(username).then((res) => {\n      setUser(res);\n    });\n  }, [setUser, username]);\n\n  // Return the user object and auth methods\n  return {\n    isUserExist: user,\n  };\n};\n"],"sourceRoot":""}